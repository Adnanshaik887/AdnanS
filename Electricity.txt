import java.util.*;



public class ElectricityBoard {
    private Map<String, String> electricityMap = new HashMap<>();

    public Map<String, String> getElectricityMap() {
        return electricityMap;
    }

    public void setElectricityMap(Map<String, String> electricityMap) {
        this.electricityMap = electricityMap;
    }

    public int findCountOfConnectionsBasedOnTheConnectionType(String connectionType) {
        int count = 0;
        for (String type : electricityMap.values()) {
            if (type.equalsIgnoreCase(connectionType)) {
                count++;
            }
        }
        return count > 0 ? count : -1;
    }

    // Requirement 2: Find connection IDs based on connection type (case-insensitive)
    public List<String> findConnectionIdsBasedOnTheConnectionType(String connectionType) {
        List<String> matchedConnectionIds = new ArrayList<>();
        for (Map.Entry<String, String> entry : electricityMap.entrySet()) {
            if (entry.getValue().equalsIgnoreCase(connectionType)) {
                matchedConnectionIds.add(entry.getKey());
            }
        }
        return matchedConnectionIds;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ElectricityBoard ebMain = new ElectricityBoard();

        System.out.println("Enter the number of connection records to be added");
        int n = Integer.parseInt(sc.nextLine());

        System.out.println("Enter the connection records(ConnectionId:Connectiontype)");
        for (int i = 0; i < n; i++) {
            String[] input = sc.nextLine().split(":");
            if (input.length == 2) {
                String connectionId = input[0].trim();
                String connectionType = input[1].trim();
                ebMain.getElectricityMap().put(connectionId, connectionType);
            }
        }

        System.out.println("Enter the Connection type to be searched");
        String searchType = sc.nextLine().trim();
        int count = ebMain.findCountOfConnectionsBasedOnTheConnectionType(searchType);
        if (count == -1) {
            System.out.println("No Connection Ids were found for " + searchType);
        } else {
            System.out.println("The count of connection Ids based on " + searchType.toUpperCase() + " are " + count);
        }

        System.out.println("Enter the Connection type to identify the Connection Ids");
        String filterType = sc.nextLine().trim();
        List<String> ids = ebMain.findConnectionIdsBasedOnTheConnectionType(filterType);
        if (ids.isEmpty()) {
            System.out.println("No Connection Ids were found for the " + filterType);
        } else {
            System.out.println("Connection Ids based on the " + filterType.toUpperCase() + " are");
            for (String id : ids) {
                System.out.println(id);
            }
        }

        sc.close();
    }
}
